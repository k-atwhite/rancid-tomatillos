{"version":3,"sources":["components/MovieCard/MovieCard.js","components/Movies/Movies.js","components/MovieDetails/MovieDetails.js","apiCalls.js","components/SearchBar/SearchBar.js","components/App/App.js","index.js"],"names":["MovieCard","poster","title","id","averageRating","className","to","src","alt","Movies","allMovies","movies","map","movie","movieObj","poster_path","backdrop","backdrop_path","releaseDate","release_date","overview","average_rating","toFixed","genre","genres","budget","revenue","runtime","tagline","MovieDetails","props","state","displayedMovie","error","this","fetch","then","response","json","setState","catch","money","dollarAmt","Intl","NumberFormat","style","currency","format","join","backgroundImage","parseInt","commaGenres","makeMoneyReadable","Component","SearchBar","handleSearch","event","searchValue","target","value","filterMovies","clearSearchValue","clearFilteredMovies","type","placeholder","name","onChange","onFocus","onClick","App","searchedMovies","filter","toLowerCase","includes","filteredMovies","length","searchError","exact","path","render","chooseMovieData","match","params","movieId","router","ReactDOM","document","getElementById"],"mappings":"2VAkBeA,EAdG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,cACtC,OACE,0BAASC,UAAU,cAAnB,UACE,cAAC,IAAD,CAAMC,GAAE,kBAAaH,GAArB,SACE,qBAAKE,UAAU,aAAaE,IAAKN,EAAQO,IAAK,mBAEhD,sBAAKH,UAAU,eAAf,UACE,mBAAGA,UAAU,QAAb,SAAsBH,IACtB,oBAAGG,UAAU,aAAb,UAA2BD,EAA3B,mBCiBOK,G,MAzBA,SAAC,GAAgB,IACxBC,EADuB,EAAbC,OACSC,KAAI,SAACC,GAC5B,OACE,cAAC,EAAD,CACEC,SAAUD,EACVZ,OAAQY,EAAME,YACdb,MAAOW,EAAMX,MACbc,SAAUH,EAAMI,cAChBC,YAAaL,EAAMM,aACnBC,SAAUP,EAAMO,SAChBhB,cAAeS,EAAMQ,eAAeC,QAAQ,GAC5CC,MAAOV,EAAMW,OACbC,OAAQZ,EAAMY,OACdC,QAASb,EAAMa,QACfC,QAASd,EAAMc,QACfC,QAASf,EAAMe,QACfzB,GAAIU,EAAMV,IACLU,EAAMV,OAKjB,OAAO,qBAAKE,UAAU,aAAf,SAA6BK,MCgFvBmB,G,wDArGb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,eAAgB,GAChBC,MAAO,IAJQ,E,qDAQnB,WAAqB,ICRC9B,EDQF,QCREA,EDSL+B,KAAKJ,MAAM3B,GCRnBgC,MAAM,yDAAD,OAA0DhC,IACrEiC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WDQxBF,MAAK,SAACvB,GAAD,OAAW,EAAK0B,SAAS,CAAEP,eAAgBnB,EAAMA,WACtD2B,OAAM,SAACP,GAAD,OACL,EAAKM,SAAS,CAAEN,MAAM,wBAAD,OAA0BA,U,+BAIrD,SAAkBQ,GAChB,IAIMC,EAJU,IAAIC,KAAKC,aAAa,QAAS,CAC7CC,MAAO,WACPC,SAAU,QAEgBC,OAAON,GAEnC,MAAkB,UAAdC,EACK,cAEAA,I,yBAIX,SAAYlB,GAEV,GAAIA,EAEF,OADYA,EAAOwB,KAAK,Q,oBAK5B,WACE,OAAId,KAAKH,MAAME,MACN,oBAAI5B,UAAU,gBAAd,SAA+B6B,KAAKH,MAAME,QAG9CC,KAAKH,MAAME,OAAUC,KAAKH,MAAMC,eAKnC,qBAAK3B,UAAU,sBAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBACEE,IAAK2B,KAAKH,MAAMC,eAAejB,YAC/BP,IAAI,cACJH,UAAU,UAEZ,qBACEA,UAAU,OACVwC,MAAO,CACLI,gBAAgB,OAAD,OAASf,KAAKH,MAAMC,eAAef,cAAnC,MAHnB,SAME,sBAAKZ,UAAU,UAAf,UACE,qBAAKA,UAAU,SAAf,SAAyB6B,KAAKH,MAAMC,eAAe9B,QACnD,qBAAKG,UAAU,SAAf,SAAyB6B,KAAKH,MAAMC,eAAeJ,UACnD,qBAAIvB,UAAU,eAAd,UACG,IACA6C,SAAShB,KAAKH,MAAMC,eAAeX,gBAAgBC,QAAQ,GAF9D,eAKA,oBAAGjB,UAAU,UAAb,UACG6B,KAAKH,MAAMC,eAAeL,QAD7B,mBAKJ,sBAAKtB,UAAU,cAAf,UACE,qBAAKA,UAAU,UAAf,SACE,sBAAMA,UAAU,MAAhB,SACG6B,KAAKiB,YAAYjB,KAAKH,MAAMC,eAAeR,YAGhD,sBAAKnB,UAAU,UAAf,UACE,4BAAI6B,KAAKH,MAAMC,eAAeZ,WAC9B,oBAAGf,UAAU,eAAb,2BACiB6B,KAAKH,MAAMC,eAAeb,gBAE3C,oBAAGd,UAAU,SAAb,oBACU,IACP6B,KAAKkB,kBAAkBlB,KAAKH,MAAMC,eAAeP,WAEpD,oBAAGpB,UAAU,UAAb,qBACW,IACR6B,KAAKkB,kBAAkBlB,KAAKH,MAAMC,eAAeN,uBA/CrD,oBAAIrB,UAAU,kBAAd,yD,GA7CcgD,c,eE2CZC,G,wDA1Cb,aAAe,IAAD,8BACZ,gBAMFC,aAAe,SAACC,GACd,EAAKjB,SAAS,CAAEkB,YAAaD,EAAME,OAAOC,QAC1C,EAAK7B,MAAM8B,aAAa,EAAK7B,MAAM0B,cATvB,EAYdI,iBAAmB,SAACL,GAClB,EAAKjB,SAAS,CAAEkB,YAAa,KAC7B,EAAK3B,MAAMgC,uBAZX,EAAK/B,MAAQ,CACX0B,YAAa,IAHH,E,0CAiBd,WAAU,IAAD,OACP,OACE,qBAAKpD,UAAU,eAAf,SACE,iCACE,uBACEA,UAAU,QACV0D,KAAK,OACL5D,GAAG,eACH6D,YAAY,gBACZC,KAAK,cACLN,MAAOzB,KAAKH,MAAM0B,YAClBS,SAAU,SAACV,GAAD,OAAW,EAAKD,aAAaC,IACvCW,QAAS,SAACX,GAAD,OAAW,EAAKK,iBAAiBL,MAE5C,mBACEnD,UAAU,cACV,cAAY,OACZ+D,QAAS,SAACZ,GAAD,OAAW,EAAKK,iBAAiBL,e,GAnC9BH,cC0FTgB,E,kDArFb,aAAe,IAAD,8BACZ,gBAmBFT,aAAe,SAACH,GACd,IAAIa,EAAiB,EAAKvC,MAAMpB,OAAO4D,QAAO,SAAC1D,GAAD,OAC5CA,EAAMX,MAAMsE,cAAcC,SAAShB,EAAYe,kBAEjD,EAAKjC,SAAS,CAAEmC,eAAgBJ,IAAkB,WAC3CA,EAAeK,QAClB,EAAKpC,SAAS,CACZqC,YACE,gEA5BI,EAkCdd,oBAAsB,WACpB,EAAKvB,SAAS,CAAEmC,eAAgB,GAAIE,YAAa,MAjCjD,EAAK7C,MAAQ,CACXpB,OAAQ,GACR+D,eAAgB,GAChBzC,MAAO,GACP2C,YAAa,IANH,E,qDAUd,WAAqB,IAAD,OFlBXzC,MAAM,yDACRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UEmB5BF,MAAK,SAACzB,GAAD,OAAY,EAAK4B,SAAS,CAAE5B,OAAQA,EAAOA,YAChD6B,OAAM,kBACL,EAAKD,SAAS,CACZN,MAAO,iE,6BAuBf,WAIE,OAHyBC,KAAKH,MAAM2C,eAAeC,OAC/CzC,KAAKH,MAAM2C,eACXxC,KAAKH,MAAMpB,S,oBAGjB,WAAU,IAAD,OACP,OACE,sBAAKN,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gBAAvB,SACE,oBAAIA,UAAU,QAAd,iCAEF,cAAC,EAAD,CACEA,UAAU,YACVuD,aAAc1B,KAAK0B,aACnBE,oBAAqB5B,KAAK4B,yBAG9B,uBAAMzD,UAAU,eAAhB,UACG6B,KAAKH,MAAME,OAAS,6BAAKC,KAAKH,MAAME,SACnCC,KAAKH,MAAMpB,QACX,oBAAIN,UAAU,kBAAd,sDAED6B,KAAKH,MAAM6C,aACV,qBAAIvE,UAAU,gBAAd,eAAiC6B,KAAKH,MAAM6C,YAA5C,OAGF,cAAC,IAAD,CACEC,OAAK,EACLC,KAAK,IACLC,OAAQ,WACN,OAAO,cAAC,EAAD,CAAQpE,OAAQ,EAAKqE,uBAGhC,cAAC,IAAD,CACEF,KAAK,mBACLC,OAAQ,YAAgB,IAAbE,EAAY,EAAZA,MACT,OAAO,cAAC,EAAD,CAAc9E,GAAI+C,SAAS+B,EAAMC,OAAOC,wB,GA7E3C9B,aCFZ+B,EACJ,eAAC,IAAD,WACG,IACD,cAAC,EAAD,IAAQ,OAIZC,IAASN,OAAOK,EAAQE,SAASC,eAAe,W","file":"static/js/main.49085440.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./MovieCard.css\";\nimport { Link } from \"react-router-dom\";\n\nconst MovieCard = ({ poster, title, id, averageRating }) => {\n  return (\n    <section className=\"entire-card\">\n      <Link to={`/movies/${id}`}>\n        <img className=\"movie-card\" src={poster} alt={\"movie poster\"}></img>\n      </Link>\n      <div className=\"title-rating\">\n        <p className=\"title\">{title}</p>\n        <p className=\"avg-rating\">{averageRating}‚≠ê</p>\n      </div>\n    </section>\n  );\n};\n\nexport default MovieCard;\n","import React from \"react\";\nimport MovieCard from \"../MovieCard/MovieCard\";\nimport \"./Movies.css\";\n\nconst Movies = ({ movies }) => {\n  const allMovies = movies.map((movie) => {\n    return (\n      <MovieCard\n        movieObj={movie}\n        poster={movie.poster_path}\n        title={movie.title}\n        backdrop={movie.backdrop_path}\n        releaseDate={movie.release_date}\n        overview={movie.overview}\n        averageRating={movie.average_rating.toFixed(1)}\n        genre={movie.genres}\n        budget={movie.budget}\n        revenue={movie.revenue}\n        runtime={movie.runtime}\n        tagline={movie.tagline}\n        id={movie.id}\n        key={movie.id}\n      />\n    );\n  });\n\n  return <div className=\"all-movies\">{allMovies}</div>;\n};\n\nexport default Movies;\n","import React, { Component } from \"react\";\nimport { getChosenMovie } from \"../../apiCalls\";\nimport \"./MovieDetails.css\";\n\nclass MovieDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayedMovie: {},\n      error: \"\",\n    };\n  }\n\n  componentDidMount() {\n    getChosenMovie(this.props.id)\n      .then((movie) => this.setState({ displayedMovie: movie.movie }))\n      .catch((error) =>\n        this.setState({ error: `Unable to load Movie-${error}` })\n      );\n  }\n\n  makeMoneyReadable(money) {\n    let formatter = new Intl.NumberFormat(\"en-US\", {\n      style: \"currency\",\n      currency: \"USD\",\n    });\n    const dollarAmt = formatter.format(money);\n\n    if (dollarAmt === \"$0.00\") {\n      return \"unavailable\";\n    } else {\n      return dollarAmt;\n    }\n  }\n\n  commaGenres(genres) {\n    let genreList;\n    if (genres) {\n      genreList = genres.join(\", \");\n      return genreList;\n    }\n  }\n\n  render() {\n    if (this.state.error) {\n      return <h2 className=\"error-message\">{this.state.error}</h2>;\n    }\n\n    if (!this.state.error && !this.state.displayedMovie) {\n      return <h2 className=\"loading-message\">üçø Movie Loading üçø</h2>;\n    }\n\n    return (\n      <div className=\".movie-details-card\">\n        <div className=\"container\">\n          <img\n            src={this.state.displayedMovie.poster_path}\n            alt=\"moviePoster\"\n            className=\"cover\"\n          />\n          <div\n            className=\"hero\"\n            style={{\n              backgroundImage: `url(${this.state.displayedMovie.backdrop_path})`,\n            }}\n          >\n            <div className=\"details\">\n              <div className=\"title1\">{this.state.displayedMovie.title}</div>\n              <div className=\"title2\">{this.state.displayedMovie.tagline}</div>\n              <h4 className=\"movie-rating\">\n                {\" \"}\n                {parseInt(this.state.displayedMovie.average_rating).toFixed(0)}\n                /10‚≠ê\n              </h4>\n              <p className=\"runtime\">\n                {this.state.displayedMovie.runtime} minutes\n              </p>\n            </div>\n          </div>\n          <div className=\"description\">\n            <div className=\"column1\">\n              <span className=\"tag\">\n                {this.commaGenres(this.state.displayedMovie.genres)}\n              </span>\n            </div>\n            <div className=\"column2\">\n              <p>{this.state.displayedMovie.overview}</p>\n              <p className=\"release-date\">\n                Release Date: {this.state.displayedMovie.release_date}\n              </p>\n              <p className=\"budget\">\n                Budget:{\" \"}\n                {this.makeMoneyReadable(this.state.displayedMovie.budget)}\n              </p>\n              <p className=\"revenue\">\n                Revenue:{\" \"}\n                {this.makeMoneyReadable(this.state.displayedMovie.revenue)}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieDetails;\n","const getAllMovies = () => {\n    return fetch('https://rancid-tomatillos.herokuapp.com/api/v2/movies')\n        .then(response => response.json())\n}\n\nconst getChosenMovie = (id) => {\n    return fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/movies/${id}`)\n    .then(response => response.json())\n}\n\nexport { getAllMovies, getChosenMovie };\n","import React, { Component } from \"react\";\n\nimport \"./SearchBar.css\";\n\nclass SearchBar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      searchValue: \"\",\n    };\n  }\n\n  handleSearch = (event) => {\n    this.setState({ searchValue: event.target.value });\n    this.props.filterMovies(this.state.searchValue);\n  };\n\n  clearSearchValue = (event) => {\n    this.setState({ searchValue: \"\" });\n    this.props.clearFilteredMovies();\n  };\n\n  render() {\n    return (\n      <div className=\"form-wrapper\">\n        <form>\n          <input\n            className=\"input\"\n            type=\"text\"\n            id=\"movie-search\"\n            placeholder=\"search movies\"\n            name=\"searchValue\"\n            value={this.state.searchValue}\n            onChange={(event) => this.handleSearch(event)}\n            onFocus={(event) => this.clearSearchValue(event)}\n          />\n          <i\n            className=\"fa fa-times\"\n            aria-hidden=\"true\"\n            onClick={(event) => this.clearSearchValue(event)}\n          ></i>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport Movies from \"../Movies/Movies\";\nimport MovieDetails from \"../MovieDetails/MovieDetails\";\nimport \"./App.css\";\nimport { Route, Link } from \"react-router-dom\";\nimport { getAllMovies } from \"../../apiCalls\";\nimport SearchBar from \"../SearchBar/SearchBar\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: [],\n      filteredMovies: [],\n      error: \"\",\n      searchError: \"\",\n    };\n  }\n\n  componentDidMount() {\n    getAllMovies()\n      .then((movies) => this.setState({ movies: movies.movies }))\n      .catch(() =>\n        this.setState({\n          error: \"Something went wrong on our end, please try again later\",\n        })\n      );\n  }\n\n  filterMovies = (searchValue) => {\n    let searchedMovies = this.state.movies.filter((movie) =>\n      movie.title.toLowerCase().includes(searchValue.toLowerCase())\n    );\n    this.setState({ filteredMovies: searchedMovies }, () => {\n      if (!searchedMovies.length) {\n        this.setState({\n          searchError:\n            \"We don't seem to have any movies matching that title...\",\n        });\n      }\n    });\n  };\n\n  clearFilteredMovies = () => {\n    this.setState({ filteredMovies: [], searchError: \"\" });\n  };\n\n  chooseMovieData() {\n    let displayedMovieData = this.state.filteredMovies.length\n      ? this.state.filteredMovies\n      : this.state.movies;\n    return displayedMovieData;\n  }\n  render() {\n    return (\n      <div className=\"app\">\n        <nav className=\"navbar\">\n          <Link to=\"/\" className=\"header-button\">\n            <h1 className=\"title\">Rancid Tomatillos</h1>\n          </Link>\n          <SearchBar\n            className=\"searchbar\"\n            filterMovies={this.filterMovies}\n            clearFilteredMovies={this.clearFilteredMovies}\n          />\n        </nav>\n        <main className=\"main-content\">\n          {this.state.error && <h2>{this.state.error}</h2>}\n          {!this.state.movies && (\n            <h2 className=\"loading-message\">üçø Movies Loading üçø</h2>\n          )}\n          {this.state.searchError && (\n            <h2 className=\"error-message\"> ${this.state.searchError}`</h2>\n          )}\n\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return <Movies movies={this.chooseMovieData()} />;\n            }}\n          />\n          <Route\n            path=\"/movies/:movieId\"\n            render={({ match }) => {\n              return <MovieDetails id={parseInt(match.params.movieId)} />;\n            }}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst router = (\n  <BrowserRouter>\n    {\" \"}\n    <App />{\" \"}\n  </BrowserRouter>\n);\n\nReactDOM.render(router, document.getElementById(\"root\"));\n"],"sourceRoot":""}